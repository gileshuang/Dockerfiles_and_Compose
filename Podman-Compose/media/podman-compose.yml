version: 4.9

services:
  network:
    image: docker.io/library/archlinux:latest
    container_name: media_network
    hostname: media_network
    command: /usr/lib/systemd/systemd
    cpus: 1
    mem_limit: 256m
    networks:
      - podman-bridge
    mac_address: 56:2f:2c:e0:bc:e9
    detach: true
    stdin_open: true
    tty: true
    restart: always
    systemd: always
    environment:
      - TZ=Asia/Shanghai
      - LC_ALL=en_US.UTF-8
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /usr/lib/locale:/usr/lib/locale:ro
    post_start:
      - command: |
          /bin/bash -c "/usr/bin/uuidgen | sed 's/-//g' > /etc/machine-id"

  filebrowser:
    image: docker.io/filebrowser/filebrowser:latest
    container_name: media_filebrowser
    hostname: media_filebrowser
    mem_limit: 4g
    network_mode: "service:network"
    stdin_open: true
    tty: true
    restart: always
    healthcheck:
      disable: true
    user: "1000:100"
    environment:
      - TZ=Asia/Shanghai
      - LC_ALL=en_US.UTF-8
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/Data/docker/podman-media_filebrowser/database:/database
      - /media/Data/docker/podman-media_filebrowser/config:/config
      - filebrowser-srv:/srv
      - /media/Storage01:/srv/jiayaohuang
      - /media/Storage01/temp/guest-upload:/srv/guest
    depends_on:
      - network

  qbittorrent:
    image:  lscr.io/linuxserver/qbittorrent:latest
    container_name: media_qbittorrent
    hostname: media_qbittorrent
    mem_limit: 4g
    network_mode: "service:network"
    stdin_open: true
    tty: true
    restart: always
    user: "1000:100"
    environment:
      - PUID=1000
      - GUID=100
      - TZ=Asia/Shanghai
      - LC_ALL=en_US.UTF-8
      - WEBUI_PORT=6880
      - TORRENTING_PORT=6881
    ports: ""
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/Data/docker/podman-media_qbittorrent/config:/config
      - /media/Downloads/qbittorrent:/downloads
    depends_on:
      - network

  flare:
    image: soulteary/flare
    container_name: media_flare
    hostname: media_flare
    mem_limit: 256m
    network_mode: "service:network"
    stdin_open: true
    tty: true
    restart: always
    command: flare
    # ports:
    #   - 5005:5005
    env_file:
      - flare.env
    environment:
      - TZ=Asia/Shanghai
      - LC_ALL=en_US.UTF-8
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/Data/docker/podman-media_flare/app:/app
    depends_on:
      - network

  xunlei:
    image: cnk3x/xunlei:latest
    container_name: media_xunlei
    hostname: media_xunlei
    cpus: 4
    mem_limit: 4g
    stdin_open: true
    tty: true
    restart: always
    network_mode: "service:network"
    privileged: true
    env_file:
      - xunlei.env
    environment:
      - TZ=Asia/Shanghai
      - LC_ALL=en_US.UTF-8
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/Data/docker/podman-media_xunlei/data:/xunlei/data
      - /media/Downloads/TDDOWNLOAD:/xunlei/downloads
    depends_on:
      - network

  jellyfin:
    image: ghcr.io/jellyfin/jellyfin:latest
    # image: nyanmisaka/jellyfin:latest
    container_name: media_jellyfin
    hostname: media_jellyfin
    cpus: 8
    mem_limit: 8g
    network_mode: "service:network"
    stdin_open: true
    tty: true
    restart: always
    user: 1000:100
    env_file:
      - jellyfin.env
    environment:
      - TZ=Asia/Shanghai
      - LC_ALL=en_US.UTF-8
    security_opt:
      - seccomp=unconfined
    device:
      - /dev/dri:/dev/dri
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/Data/docker/podman-media_jellyfin/cache:/cache
      - /media/Data/docker/podman-media_jellyfin/config:/config
      - /media/Data/docker/podman-media_jellyfin/fonts:/usr/share/fonts
      - /media/Data/docker/podman-media_jellyfin/fontconfig:/etc/fonts
      - /media/Data/docker/podman-media_jellyfin/web-config.json:/jellyfin/jellyfin-web/config.json
      - /media/Storage01/UserData:/media:ro
      - /media/Storage01/syncthing:/syncthing:ro
    depends_on:
      - network

  immich-server:
    container_name: media_immich_server
    hostname: media_immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # image: immich-server:latest
    cpus: 8
    mem_limit: 8g
    user: 1000:100
    network_mode: "service:network"
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    env_file:
      - immich.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /usr/lib/locale:/usr/lib/locale:ro
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - /media/Data/docker/podman-media_immich/upload:/usr/src/app/upload
      - /media/Storage01/syncthing/照片（归档）/immich/encoded-video:/usr/src/app/upload/encoded-video
      - /media/Storage01/syncthing/照片（归档）/immich/upload:/usr/src/app/upload/upload
      - /media/Storage01/syncthing/照片（归档）/immich/library:/usr/src/app/upload/library
      - /media/Storage01/syncthing/照片（归档）:/srv/photos-archive:ro
    # ports:
    #   - '2283:2283'
    depends_on:
      - immich-redis
      - immich-database
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: media_immich_machine_learning
    hostname: media_immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # image: immich-machine-learning:latest
    cpus: 8
    mem_limit: 8g
    user: 1000:100
    network_mode: "service:network"
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /usr/lib/locale:/usr/lib/locale:ro
      - immich-model-cache:/cache
      - immich-model-home-cache:/usr/src/.cache
      - immich-model-home-config:/usr/src/.config
    env_file:
      - immich.env
    restart: always
    healthcheck:
      disable: false

  immich-redis:
    container_name: media_immich_redis
    hostname: redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:fec42f399876eb6faf9e008570597741c87ff7662a54185593e74b09ce83d177
    cpus: 2
    mem_limit: 2g
    network_mode: "service:network"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /usr/lib/locale:/usr/lib/locale:ro
      - immich-redis-data:/data
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always
    depends_on:
      - network

  immich-database:
    container_name: media_immich_postgres
    hostname: database
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0
    cpus: 4
    mem_limit: 4g
    user: 1000:100
    env_file:
      - immich.env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      # Uncomment the DB_STORAGE_TYPE: 'HDD' var if your database isn't stored on SSDs
      # DB_STORAGE_TYPE: 'HDD'
    network_mode: "service:network"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /usr/lib/locale:/usr/lib/locale:ro
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - /media/Data/docker/podman-media_immich/postgres:/var/lib/postgresql/data
    shm_size: 128mb
    restart: always
    depends_on:
      - network

volumes:
  filebrowser-srv:
  immich-model-cache:
  immich-model-home-cache:
  immich-model-home-config:
  immich-redis-data:

networks:
  podman-bridge:
    external: true
